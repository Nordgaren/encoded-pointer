var searchIndex = JSON.parse('{\
"encoded_pointer":{"doc":"Encoded Pointer","t":"AADDMMMMLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLL","n":["decoded","encoded","DecodedPointer","DecodedPointerMut","bool_one","bool_one","bool_two","bool_two","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","pointer","pointer","try_from","try_from","try_into","try_into","type_id","type_id","EncodedPointer","borrow","borrow_mut","encode","fmt","from","from_address","from_value_unchecked","get_address","get_bool_one","get_bool_two","get_decoded","get_decoded_mut","get_pointer","get_pointer_mut","get_value","into","new","set_address","set_bool_one","set_bool_two","set_value","try_from","try_into","type_id"],"q":[[0,"encoded_pointer"],[2,"encoded_pointer::decoded"],[28,"encoded_pointer::encoded"],[53,"core::fmt"],[54,"core::fmt"],[55,"core::any"],[56,"std::io::error"]],"d":["","","A helper type used to deconstruct an <code>EncodedPointer</code> to a …","A type used to deconstruct an <code>EncodedPointer</code> to a <code>*mut T</code> …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This is a type that encodes the last two bits of a pointer …","","","Takes in a usize and two bools, and returns a usize with …","","Returns the argument unchanged.","Checks if there is bit collision in the provided pointer, …","Returns an encoded pointer with the provided value, …","Returns the address portion of the encoded pointer.","Returns the bool encoded into the last bit of the pointer.","Returns the bool encoded into the second to last bit of …","Returns a DecodedPointer with the specified const pointer …","Returns a DecodedPointerMut with the specified mutable …","Returns a const pointer to the generic type, using the …","Returns a mutable pointer to the generic type, using the …","Returns the entire encoded pointer value, including the …","Calls <code>U::from(self)</code>.","Checks if there is bit collision in the provided pointer, …","Checks if the address has bit collision with the encoded …","Sets the last bit of the encoded pointer to the provided …","Sets the second to last bit of the encoded pointer to the …","Sets the entire encoded pointer to the given value.","","",""],"i":[0,0,0,0,1,5,1,5,1,5,1,5,1,5,1,1,5,5,1,5,1,5,1,5,1,5,1,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2],3,4],[[[5,[-1]],2],3,4],[6,[[1,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[6,[[5,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[9,10,10],9],[[6,2],3],[-1,-1,[]],[9,[[11,[6]]]],[9,6],[6,9],[6,10],[6,10],[6,[[1,[-1]]],[]],[6,[[5,[-1]]],[]],[6],[6],[6,9],[-1,-2,[],[]],[[9,10,10],[[11,[6]]]],[[6,9],10],[[6,10],12],[[6,10],12],[[6,9],12],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[3,"DecodedPointer",2],[3,"Formatter",53],[6,"Result",53],[8,"Debug",53],[3,"DecodedPointerMut",2],[3,"EncodedPointer",28],[4,"Result",54],[3,"TypeId",55],[15,"usize"],[15,"bool"],[6,"Result",56],[15,"tuple"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
